// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(FinanceContext))]
    [Migration("20241013085616_addedEngWordSeedDatas")]
    partial class addedEngWordSeedDatas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3e2766a-01e4-47c7-8ec7-5dad220c061b"),
                            Name = "Salary",
                            Type = "Income"
                        },
                        new
                        {
                            Id = new Guid("53cdcf36-9a0e-4d8b-80d7-75016c2fc359"),
                            Name = "Rental Income",
                            Type = "Income"
                        },
                        new
                        {
                            Id = new Guid("0d4680d4-c0b4-4309-b428-28b5b70a73db"),
                            Name = "Investment Income",
                            Type = "Income"
                        },
                        new
                        {
                            Id = new Guid("7d4e4476-2a57-4f35-aaeb-734ed723a16d"),
                            Name = "Other Income",
                            Type = "Income"
                        },
                        new
                        {
                            Id = new Guid("de6f3915-de14-4ab3-a858-24fca0eae158"),
                            Name = "Rent Expense",
                            Type = "Expense"
                        },
                        new
                        {
                            Id = new Guid("080cd899-ef20-4772-bc31-b0067e6a55d6"),
                            Name = "Education Expense",
                            Type = "Expense"
                        },
                        new
                        {
                            Id = new Guid("760b54d9-1f32-47a2-a108-ab4a51577c1d"),
                            Name = "Entertainment Expense",
                            Type = "Expense"
                        },
                        new
                        {
                            Id = new Guid("ba21eb0b-7fca-4b48-bfc6-e41187cf9233"),
                            Name = "Car Expense",
                            Type = "Expense"
                        },
                        new
                        {
                            Id = new Guid("c8b42480-99bb-4b89-b7bb-7671d2bfff0d"),
                            Name = "Other Expenses",
                            Type = "Expense"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("DataLayer.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Income", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("DataLayer.Entities.Expense", b =>
                {
                    b.HasOne("DataLayer.Entities.Category", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.User", "User")
                        .WithMany("ExpenseList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Income", b =>
                {
                    b.HasOne("DataLayer.Entities.Category", "Category")
                        .WithMany("Incomes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.User", "User")
                        .WithMany("IncomeList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataLayer.Entities.Category", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("DataLayer.Entities.User", b =>
                {
                    b.Navigation("ExpenseList");

                    b.Navigation("IncomeList");
                });
#pragma warning restore 612, 618
        }
    }
}
