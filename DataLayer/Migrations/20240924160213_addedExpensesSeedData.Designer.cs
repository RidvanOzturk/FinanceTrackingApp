// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(FinanceContext))]
    [Migration("20240924160213_addedExpensesSeedData")]
    partial class addedExpensesSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d4c867f-fe8c-440a-ad7f-a6d05e9487bd"),
                            Name = "Maaş",
                            Type = "Gelir"
                        },
                        new
                        {
                            Id = new Guid("47fc5307-72f6-4214-8ef2-bfd9589ae17f"),
                            Name = "Kira Geliri",
                            Type = "Gelir"
                        },
                        new
                        {
                            Id = new Guid("7fc75b7a-cbef-4199-887a-ad239d4bd503"),
                            Name = "Yatırım Geliri",
                            Type = "Gelir"
                        },
                        new
                        {
                            Id = new Guid("82500fea-e057-4a17-a3a1-ba064b4841a6"),
                            Name = "Diğer Gelirler",
                            Type = "Gelir"
                        },
                        new
                        {
                            Id = new Guid("75b4d483-a608-4d39-8d41-c79966001827"),
                            Name = "Kira Gideri",
                            Type = "Gider"
                        },
                        new
                        {
                            Id = new Guid("be0b84d8-4bd4-4c8e-8b90-c268a4485b99"),
                            Name = "Eğitim Gideri",
                            Type = "Gider"
                        },
                        new
                        {
                            Id = new Guid("ef449199-0456-4eb7-b2e4-8e3bcb1573df"),
                            Name = "Eğlence Gideri",
                            Type = "Gider"
                        },
                        new
                        {
                            Id = new Guid("d854684d-7f66-4e35-b827-79d0f9c4fa90"),
                            Name = "Araba Gideri",
                            Type = "Gider"
                        },
                        new
                        {
                            Id = new Guid("2fefcd3b-5b33-49ae-a58d-9ad2bc066bd0"),
                            Name = "Diğer Giderler",
                            Type = "Gider"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("DataLayer.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Income", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("DataLayer.Entities.Expense", b =>
                {
                    b.HasOne("DataLayer.Entities.Category", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.User", "User")
                        .WithMany("ExpenseList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Income", b =>
                {
                    b.HasOne("DataLayer.Entities.Category", "Category")
                        .WithMany("Incomes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.User", "User")
                        .WithMany("IncomeList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataLayer.Entities.Category", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("DataLayer.Entities.User", b =>
                {
                    b.Navigation("ExpenseList");

                    b.Navigation("IncomeList");
                });
#pragma warning restore 612, 618
        }
    }
}
